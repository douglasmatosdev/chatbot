{"version":3,"sources":["../node_modules/date-and-time/locale sync /^/.//.*$","compare.js","index.js","language.js","userdata.js","configAdaptiveCards.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","compare","a","b","constructor","p","hasOwnProperty","LOCAL","LANG","directLine","DirectLine","secret","undefined","token","domain","webSocket","pollingInterval","getKey","Math","random","toString","substring","document","getElementById","innerHTML","msg_welcome_title","msg_header_name","connectionStatus$","subscribe","connectionStatus","ConnectionStatus","Uninitialized","Connecting","userData","msg_connecting","Online","msg_connected","postActivity","from","name","type","text","value","ftrigger","error","ExpiredToken","FailedToConnect","msg_not_connected","Ended","console","log","date","locale","local","err","AdaptiveCard","props","adaptiveCard","AdaptiveCards","this","nextProps","hostConfig","payload","onExecuteAction","getJsonTypeName","onActionOpenUrl","defaultOpenUrlHandler","onActionShowCard","data","action","window","open","url","title","executeAction","bind","parse","result","render","className","style","ref","n","appendChild","onError","color","message","React","Component","BubbleMessageRender","item","isClient","key","attachment","msg_sent","format","Date","date_format","src","alt","ADAPTIVECARD_CONF","msg_received_at","BubbleMessage","items","MyChatbotClass","state","client_text","botIsTyping","submitMessage","onEnterPress","clientInputText","scrollToBottom","chatBotActivity","messageSent","messagesContainer","placeholder","msg_box_hint","onKeyDown","onChange","onClick","msg_send_hint","msg_website_hint","href","msg_website","target","rel","msg_dev_company","setState","keyCode","shiftKey","ReactDOM","findDOMNode","scrollTop","scrollHeight","val","preventDefault","trim","newItem","prevState","concat","act","attachments","content","activity$","activity","MESSAGE_PT_BR","msg_welcome","msg_welcome2","msg_welcome3","msg_welcome4","msg_welcome5","msg_welcome6","MESSAGE_EN_US","MESSAGE_FR_FR","MESSAGE_IT_IT","MESSAGE_ES_ES","PT_BR","EN_US","FR_FR","IT_IT","ES_ES","chatBotName","load_language","lang","USER_NAME","USER_ID","BOT_ID","BOT_NAME","getStatusChat","status","element","backgroundColor"],"mappings":"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","file":"static/js/main.ba0a4e4a.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 44,\n\t\"./ar.js\": 44,\n\t\"./az\": 45,\n\t\"./az.js\": 45,\n\t\"./bn\": 46,\n\t\"./bn.js\": 46,\n\t\"./cs\": 47,\n\t\"./cs.js\": 47,\n\t\"./de\": 48,\n\t\"./de.js\": 48,\n\t\"./el\": 49,\n\t\"./el.js\": 49,\n\t\"./es\": 50,\n\t\"./es.js\": 50,\n\t\"./fa\": 51,\n\t\"./fa.js\": 51,\n\t\"./fr\": 52,\n\t\"./fr.js\": 52,\n\t\"./hi\": 53,\n\t\"./hi.js\": 53,\n\t\"./hu\": 54,\n\t\"./hu.js\": 54,\n\t\"./id\": 55,\n\t\"./id.js\": 55,\n\t\"./it\": 56,\n\t\"./it.js\": 56,\n\t\"./ja\": 57,\n\t\"./ja.js\": 57,\n\t\"./jv\": 58,\n\t\"./jv.js\": 58,\n\t\"./ko\": 59,\n\t\"./ko.js\": 59,\n\t\"./my\": 60,\n\t\"./my.js\": 60,\n\t\"./nl\": 61,\n\t\"./nl.js\": 61,\n\t\"./pa-in\": 62,\n\t\"./pa-in.js\": 62,\n\t\"./pl\": 63,\n\t\"./pl.js\": 63,\n\t\"./pt\": 64,\n\t\"./pt.js\": 64,\n\t\"./ro\": 65,\n\t\"./ro.js\": 65,\n\t\"./ru\": 66,\n\t\"./ru.js\": 66,\n\t\"./sr\": 67,\n\t\"./sr.js\": 67,\n\t\"./th\": 68,\n\t\"./th.js\": 68,\n\t\"./tr\": 69,\n\t\"./tr.js\": 69,\n\t\"./uk\": 70,\n\t\"./uk.js\": 70,\n\t\"./uz\": 71,\n\t\"./uz.js\": 71,\n\t\"./vi\": 72,\n\t\"./vi.js\": 72,\n\t\"./zh-cn\": 73,\n\t\"./zh-cn.js\": 73,\n\t\"./zh-tw\": 74,\n\t\"./zh-tw.js\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 164;","// Javascript Deep Compare function compliments of Jean Vincent\n// https://stackoverflow.com/a/6713782/4279849\n\nexport default function compare (a, b) {\n  if (a === b) return true\n  // if both a and b are null or undefined and exactly the same\n\n  if (!(a instanceof Object) || !(b instanceof Object)) return false\n  // if they are not strictly equal, they both need to be Objects\n\n  if (a.constructor !== b.constructor) return false\n  // they must have the exact same prototype chain, the closest we can do is\n  // test there constructor.\n\n  for (var p in a) {\n    if (!a.hasOwnProperty(p)) continue\n    // other properties were tested using a.constructor === b.constructor\n\n    if (!b.hasOwnProperty(p)) return false\n    // allows to compare a[ p ] and b[ p ] when set to undefined\n\n    if (a[ p ] === b[ p ]) continue\n    // if they have the same strict value or identity then they are equal\n\n    if (typeof (a[ p ]) !== 'object') return false\n    // Numbers, Strings, Functions, Booleans must be strictly equal\n\n    if (!compare(a[ p ], b[ p ])) return false\n    // Objects and Arrays must be tested recursively\n  }\n\n  for (p in b) {\n    if (b.hasOwnProperty(p) && !a.hasOwnProperty(p)) return false\n    // allows a[ p ] to be set to undefined\n  }\n  return true\n}\n","/*\n\n\tAUTHOR: Fábio Pereira da Silva\n\tYEAR: 2019\n\tLICENSE: MIT\n\tEMAIL: fabioegel@gmail.com or fabioegel@protonmail.com\n\n \tThis is a main file of Webchat Client Application\n \t=================================================\n\n\tBefore you start:\n\n\t\t- Check user LANGUAGE:\n\t\t\tSet LOCAL=LANG.load_language(<YOUR_INTERFACE_LANGUAGE>) where:\n\t\t\t\t* LANG.PT_BR for Brazilian Portuguese\n\t\t\t\t* LANG.EN_US for US English\n\t\t\t\t* LANG.FR_FR for French\n\t\t\t\t* LANG.IT_IT for Italian\n\t\t\t\t* LANG.ES_ES for Spanish\n\n\t\t- Set SHOW_CLIENT_CUSTOM_MSG=true if you want show a custom message. Default value SHOW_CLIENT_CUSTOM_MSG=false\n\n\t\t- Communication to server:\n\n\t\t\tThere are three modes:\n\n\t\t\t\tWhen (USE_LOCAL_SERVER=true)\n\t\t\t\t\t* It will use direct offline mode (default development mode and example)\n\t\t\t\tWhen (USE_LOCAL_SERVER=false)\n\t\t\t\t\t* It will use MS Azure Botframework TOKEN or SECRET_KEY (Remember: Secred Key is not recommended for security reasons)\n\n\t\t\tCommunication protocol mode:\n\t\t\t\t* POST when using directline offline (default for development and example. It needs bridge.js appplication to work)\n\t\t\t\t* Websocket when using MS Azure Botframework\n \n*/\n\n\nimport { DirectLine, ConnectionStatus } from 'botframework-directlinejs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport date from 'date-and-time';\nimport * as userData from './userdata.js';\nimport * as AdaptiveCards from 'adaptivecards';\nimport PropTypes from 'prop-types';\nimport compare from './compare';\nimport * as ADAPTIVECARD_CONF from './configAdaptiveCards.js';\nimport * as LANG from './language.js';\n\n//****** BEGIN SHOW CUSTOM CLIENT MESSAGE ******//\n//Set SHOW_CLIENT_CUSTOM_MSG=true if you want show a custom message. Default value SHOW_CLIENT_CUSTOM_MSG=false\n\nconst SHOW_CLIENT_CUSTOM_MSG=false;\n\n//****** END SHOW CUSTOM CLIENT MESSAGE ******//\n\n\n//****** BEGIN USE LOCAL SERVER ******//\n// Set USE_LOCAL_SERVER=false if you use MS Azure Botframework\n// Set USE_LOCAL_SERVER=true for direct line offline, developement mode and example. (default: USE_LOCAL_SERVER=true)\n\nconst USE_LOCAL_SERVER=true;\nconst USE_SOCKET=false; // Default: false for directline bridge application for POST events. It must be false to work with bridge application.\nconst LOCAL_SERV_PORT=\"4000\";\nconst LOCAL_SERVER_LOCATION=\"http://localhost:\"+LOCAL_SERV_PORT+\"/directline\"; // Default value to work with myChatBot example. Port is 3000.\n\n//****** BEGIN USE LOCAL SERVER ******//\n\n\n//--------------------------------------------------------//\n\n\n//****** BEGIN MS AZURE BOTFRAMEWORK CONFIG ******//\n// This have no effect when you are using directline offline with bridge application (USE_LOCAL_SERVER=true)\n// Use it if you already have an account in MS Azure Cloud. See details at https://azure.microsoft.com/en-us/account/\n\nconst USAR_TOKEN=true; // Default: true. It is recommended use TOKEN instead Secret Key app.\n\nconst SECRET_KEY = \"<YOUR SECRET KEY HERE>\"; // Your MS Azure Botframework secret key here (Not recommended)\nconst TOKEN = \"<YOUR AZURE TOKEN HERE>\"; // Your MS Azure Botframework TOKEN here (Recommended)\n\n\n//****** END MS AZURE BOTFRAMEWORK CONFIG ******//\n\n\n//--------------------------------------------------------//\n\n\n//****** BEGIN WEBCHAT INTERFACE ******//\n\n// Set language support:\n// Available languages are:\n//\t- LANG.PT_BR (BRAZILIAN PORTUGUESE)\n//\t- LANG.EN_US (US ENGLISH)\n//\t- LANG.FR_FR (FRENCH)\n//\t- LANG.IT_IT (ITALIAN)\n//\t- LANG.ES_ES (ESPANISH)\n//\n// You can also add/modify languages. This webchat language support is based in JSON schema.\n// See \"language.js\" to add/modify these structures/languages.\n\nconst LOCAL=LANG.load_language(LANG.PT_BR);\n\n\n//****** END WEBCHAT INTERFACE ******//\n\n\n//-----------------------------------//\n\n\n//****** BEGIN DEVELOMENT MODE ******//\n// Default: true for developement and example mode.\n\nconst DEBUG=true;\n\n//****** END DEVELOMENT MODE ******//\n\nvar directLine = new DirectLine({\n    secret: (USAR_TOKEN)?undefined:SECRET_KEY,\n    token: (USAR_TOKEN)?TOKEN:undefined,\n    domain: (USE_LOCAL_SERVER)?LOCAL_SERVER_LOCATION:undefined,\n    webSocket: (USE_LOCAL_SERVER)?(USE_SOCKET):true,\n    pollingInterval:null // optional: set polling interval in milliseconds. Default to 1000 (used in POST method)\n});\n\n\ndocument.getElementById('msg_welcome_title-id').innerHTML=LOCAL.msg_welcome_title;\ndocument.getElementById('chat-bot-name-id').innerHTML=LOCAL.msg_header_name;\n\n\ndirectLine.connectionStatus$\n\t.subscribe(connectionStatus => {\n\n\t\tswitch(connectionStatus) {\n\t\t\tcase ConnectionStatus.Uninitialized:    // the status when the DirectLine object is first created/constructed\n\t\t\t\tbreak;\n\t\t\tcase ConnectionStatus.Connecting:       // currently trying to connect to the conversation\n\t\t\t\tuserData.getStatusChat('yellow',LOCAL.msg_connecting);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionStatus.Online:           // successfully connected to the converstaion. Connection is healthy so far as we know.\n\t\t\t\tuserData.getStatusChat('green',LOCAL.msg_connected);\n\t\t\t\tdirectLine.postActivity({\n\t\t\t\t\tfrom: { id: userData.USER_ID, name: userData.USER_NAME },\n\t\t\t\t\ttype: 'message',\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\tvalue: {ftrigger:\"welcome\"}\n\t\t\t\t}).subscribe(\n\t\t\t\t\tid => null,\n\t\t\t\t\terror => null\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionStatus.ExpiredToken:     // last operation errored out with an expired token. Your app should supply a new one.\n\t\t\t\tbreak;\n\t\t\tcase ConnectionStatus.FailedToConnect:  // the initial attempt to connect to the conversation failed. No recovery possible.\n\t\t\t\tuserData.getStatusChat('red',LOCAL.msg_not_connected);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionStatus.Ended:            // the bot ended the conversation\n\t\t\tdefault:\n\t\t}\n\n\t\tif (DEBUG) {\n\t\t\tconsole.log(\"DirectLine on ConnectionStatus:\");\n\t\t\tconsole.log(\"Sinal = \"+connectionStatus);\n\t\t}\n\n\t});\n\n\nfunction getKey()\n{\n\tvar value = Math.random().toString(36).substring(2);\n\treturn value;\n}\n\ntry {\n\tdate.locale(LOCAL.local);\n} catch (err) {\n\tif (DEBUG)\n\t\tconsole.log(err);\n}\n\n//************************************BEGIN REACT-ADAPTIVECARDS BLOCK CODE****************************************************//\n// For some reason react-adaptivecards does not work properly when installed in node_modules directory.\n// Also I had made some modification of original code to work properly with my code. Code modifications are commented below\n// This block is an opensource code developed by Daniel Gary (https://github.com/danielgary) under MIT Licence\n// I could not use PropType. So I must change event 'Action.Submit'\n// PS.: File 'compare.js' is Javascript Deep Compare function developed by Jean Vincent\n\nconst ACTION_OPEN_URL = 'Action.OpenUrl'\nconst ACTION_SHOW_CARD = 'Action.ShowCard'\nconst ACTION_SUBMIT = 'Action.Submit'\n\nclass AdaptiveCard extends React.Component {\n\tstatic propTypes = {\n\t\t/** The hostConfig object that is passed along to the native AdaptiveCards. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/hostconfig) */\n\t\thostConfig: PropTypes.object,\n\t\t/** The card schema.  It must comply with the card schema. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/create/cardschema) */\n\t\tpayload: PropTypes.object.isRequired,\n\t\t/** Method that will be invoked anytime a card action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actions) */\n\t\tonExecuteAction: PropTypes.func,\n\t\t/** Method that will be invoked when a Submit action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionsubmit) */\n\t\tonActionSubmit: PropTypes.func,\n\t\t/** Method that will be invoked when an Open Url action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionopenurl) */\n\t\tonActionOpenUrl: PropTypes.func,\n\t\t/** Method that will be invoked when a Show Card action is executed. [More Info](https://docs.microsoft.com/en-us/adaptive-cards/display/implementingrenderer#actionshowcard) */\n\t\tonActionShowCard: PropTypes.func,\n\t\t/** Method that will be invoked if an error is thrown while trying to render a card. */\n\t\tonError: PropTypes.func,\n\t\t/** JSX styles that will be applied to the card conatiner */\n\t\tstyle: PropTypes.object\n\t}\n\tconstructor (props) {\n\t\tsuper(props)\n\t\t\t// Create this in the constructor so we don't create it every render\n\t\t\tthis.adaptiveCard = new AdaptiveCards.AdaptiveCard()\n\t\t}\n\n\tcomponentWillUnmount () {\n\t\t// Remove all references\n\t\tdelete this.adaptiveCard\n\t}\n\n\tshouldComponentUpdate (nextProps) {\n\n\t//console.log('shouldComponentUpdate');\n\t\tif (compare(nextProps.hostConfig, this.props.hostConfig)) {\n\t\t\treturn true\n\t\t}\n\t\tif (compare(nextProps.payload, this.props.payload)) {\n\t\t\treturn true\n\t\t}\n\t\tif (compare(nextProps.onExecuteAction, this.props.onExecuteAction)) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\texecuteAction (a) {\n\n\t\tconst type = a.getJsonTypeName();\n\n\t\tswitch (type) {\n\t\t\tcase ACTION_OPEN_URL: {\n\t\t\t\tif (this.props.onActionOpenUrl) {\n\t\t\t\t\tthis.props.onActionOpenUrl(a)\n\t\t\t\t} else {\n\t\t\t\t\tthis.defaultOpenUrlHandler(a)\n\t\t\t\t}\n\n        \t\t\tbreak\n      \t\t}\n\t\t\tcase ACTION_SHOW_CARD: {\n\t\t\t\tif (this.props.onActionShowCard) {\n\t\t\t\t\tthis.props.onActionShowCard(a)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase ACTION_SUBMIT: {\n\t\t\t\t// Modification of original Daniel Gary's code\n\t\t\t\t//console.log(a);\n\t\t\t\t//if (DEBUG)\n\t\t\t\t//\tconsole.log(\"Ação: Submit\");\n\n\t\t\t\tdirectLine.postActivity({\n\t\t\t\t\tfrom: { id: userData.USER_NAME, name: userData.USER_ID }, // required (from.name is optional)\n\t\t\t\t\ttype: 'message',\n\t\t\t\t\t//text: msg_valor_texto//this.valor_texto.value\n\t\t\t\t\tvalue: a.data\n\t\t\t\t}).subscribe(\n\t\t\t\t\tid => console.log('Sucesso', id),\n\t\t\t\t\terror => console.log(\"Error posting activity\", error)\n\t\t\t\t);\n\t\t\t\t// End modification\n        \t\t\t//if (this.props.onActionSubmit) {\n        \t\t\t//  this.props.onActionSubmit(a)\n        \t\t\t//}\n        \t\t\tbreak\n      \t\t}\n      \t\tdefault:\n\t\t}\n\t\tif (this.props.onExecuteAction) {\n\t\t\tthis.props.onExecuteAction(a)\n\t\t}\n\t}\n\n\tdefaultOpenUrlHandler (action) {\n\t\twindow.open(action.url, action.title || '_blank')\n\t}\n\n\trender () {\n\t\tif (this.props.hostConfig) {\n\t\t\tthis.adaptiveCard.hostConfig = new AdaptiveCards.HostConfig(this.props.hostConfig)\n\t\t}\n\t\tthis.adaptiveCard.onExecuteAction = this.executeAction.bind(this)\n\n\t\ttry {\n\t\t\tthis.adaptiveCard.parse(this.props.payload)\n\t\t\tconst result = this.adaptiveCard.render()\n\t\t\t//return <div className={adaptiveCardDiv} style={this.props.style} ref={(n) => { n && n.appendChild(result) }} />\n\t\t\t//Modification of Daniel Gary's code:\n\t\t\treturn <div className=\"ac-container\" style={this.props.style} ref={(n) => { n && n.appendChild(result) }} />\n\t\t} catch (err) {\n\t\t\tconsole.error(err)\n\t\t\tif (this.props.onError) {\n\t\t\t\treturn this.props.onError(err)\n\t\t\t} else {\n\t\t\t\treturn <div className=\"ac-container\" style={{ color: 'red' }}>{err.message}</div> //Here another modification\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n//************************************END REACT-ADAPTIVECARDS BLOCK CODE****************************************************//\n\n\nclass BubbleMessageRender extends React.Component {\n\n\trender()\n\t{\n\t\tvar item = this.props.item;\n\n\t\tif (item.isClient)\n\t\t{\n\t\t\treturn (\n\t\t\t\t<div className=\"client-container\" key={\"key-client-container-\"+item.key}>\n\t   \t\t\t\t<div className=\"client-message-container\" key={\"key-client-message-container-\"+item.key}>\n\t   \t\t\t\t\t<div className=\"client-message\" key={\"key-client-message-\"+item.key}>\n\t   \t\t\t\t\t\t{item.attachment?\"Anexo\":item.message}\n\t   \t\t\t\t\t</div>\n\t   \t\t\t\t\t<div className=\"client-timestamp\" key={\"key-client-timestamp-\"+item.key}>\n\t   \t\t\t\t\t \t{LOCAL.msg_sent}{date.format(new Date(), LOCAL.date_format)}\n\t  \t\t\t\t\t</div>\n\t   \t\t\t\t</div>\n\t    \t\t\t\t<div className=\"client-avatar\" key={\"key-client-avatar-\"+item.key}>\n\t    \t\t\t\t\t<img src=\"images/user-avatar-small.png\" alt=\"user-avatar-small.png\" key={\"key-client-avatar-img-\"+item.key} />\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (\n\t\t\t\t<div className=\"chatbot-container\" key={\"key-chatbot-container-\"+item.key}>\n\t\t\t\t\t<div className=\"chatbot-avatar\" key={\"key-chatbot-avatar-\"+item.key}>\n\t   \t\t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={\"key-chatbot-avatar-img\"+item.key} />\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-message-container\" key={\"key-chatbot-message-container-\"+item.key}>\n\t   \t\t\t\t\t<div className=\"chatbot-message\" key={\"key-chatbot-message-\"+item.key}>\n\t\t\t\t\t\t\t{item.attachment?<AdaptiveCard id={item.key+\"adaptive\"} payload={item.message}\n\t\t\t\t\t\t\t\thostConfig={ADAPTIVECARD_CONF.hostConfig} />:item.message}\n\t   \t\t\t\t\t</div>\n\t   \t\t\t\t\t<div className=\"chatbot-timestamp\" key={\"key-chatbot-timestamp-\"+item.key}>\n\t   \t\t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t\t</div>\n\t   \t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n}\n\nclass BubbleMessage extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\tthis.props.items.map(item => (\n\t\t\t\t<BubbleMessageRender item={item} key={getKey()}/>\n\t\t\t))\n\t\t);\n\t}\n}\n// Default WelcomeMessage\nclass WelcomeMessage extends React.Component {\n\trender() {\n\t\treturn (\n\t\t[\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>,\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome2}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>,\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome3}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>,\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome4}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>,\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome5}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>,\n\t\t\t<div className=\"chatbot-container\" key={getKey()}>\n\t\t\t\t<div className=\"chatbot-avatar\" key={getKey()}>\n\t   \t\t\t\t<img src=\"images/bot-avatar-small.png\" alt=\"bot-avatar-small\" key={getKey()} />\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"chatbot-message-container\" key={getKey()}>\n\t   \t\t\t\t<div className=\"chatbot-message\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_welcome6}\n\t   \t\t\t\t</div>\n\t   \t\t\t\t<div className=\"chatbot-timestamp\" key={getKey()}>\n\t   \t\t\t\t\t{LOCAL.msg_received_at}{date.format(new Date(), LOCAL.date_format)}\n\t   \t\t\t\t</div>\n\t   \t\t\t</div>\n\t\t\t</div>\n\t\t]\n\t\t);\n\t}\n}\n\n// Main class of myChatBot webchat\n\nclass MyChatbotClass extends React.Component\n{\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t     isClient: false,\n\t\t\titems: [],\n\t\t\tclient_text:\"\",\n\t\t\tbotIsTyping: false,\n\t\t\tattachment: false\n\t\t};\n\t\tthis.submitMessage=this.submitMessage.bind(this);\n\t\tthis.onEnterPress=this.onEnterPress.bind(this);\n\t\tthis.clientInputText=this.clientInputText.bind(this);\n\t\tthis.scrollToBottom = this.scrollToBottom.bind(this);\n\t\tthis.chatBotActivity = this.chatBotActivity.bind(this);\n\t\tthis.messageSent = this.messageSent.bind(this);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t[\n\t\t\t<div className=\"webchat-conversations\" key=\"key-webchat-conversations\" \n\t\t\tref={(messagesContainer) => {this.messagesContainer = messagesContainer;}} >\n\t\t\t\t{SHOW_CLIENT_CUSTOM_MSG?<WelcomeMessage />:null}\n\t   \t\t\t<BubbleMessage items={this.state.items} key=\"key-bubble-message\" />\n\t   \t\t\t{this.state.botIsTyping?<img src=\"images/typing.gif\" className=\"typing-img\" key=\"key-typing-img\" alt=\"alt-typing\" />:null}\n\t\t\t</div>,\n\t\t\t<div className=\"webchat-form-div\" key=\"key-form-div\">\n   \t\t\t\t<div className=\"webchat-form\" key=\"key-webchat-form\">\n   \t\t\t\t\t<textarea className=\"webchat-textarea\" placeholder={LOCAL.msg_box_hint}\n   \t\t\t\t\t\tvalue={this.state.client_text}\n   \t\t\t\t\t\tonKeyDown={this.onEnterPress}\n   \t\t\t\t\t\tonChange={this.clientInputText}\n   \t\t\t\t\t\tkey=\"key-webchat-textarea\">\n   \t\t\t\t\t</textarea>\n   \t\t\t\t\t<input className=\"webchat-submit\" type=\"image\" src=\"images/send.png\" value=\"\" alt=\"send-img\"\n   \t\t\t\t\tonClick={this.submitMessage} key=\"key-webchat-submit\" title={LOCAL.msg_send_hint}/>\n   \t\t\t\t</div>\n   \t\t\t</div>,\n   \t\t\t<div className=\"webchat-logo\" key=\"key-webchat-logo\">\n   \t\t\t\t<div className=\"webchat-logo-company\" key=\"key-webchat-logo-company\" title={LOCAL.msg_website_hint}>\n\t   \t\t\t\t<a href={LOCAL.msg_website} target=\"_blank\" rel=\"noopener noreferrer\">\n\t   \t\t\t\t\t<img src=\"images/generic-company-logo.png\" alt=\"my-company-logo\" key=\"key-my-company-logo\"/>\n\t   \t\t\t\t</a>\n\t   \t\t\t</div>\n\t   \t\t\t<div className=\"webchat-text-company\" key=\"key-webchat-text-company\">\n\t   \t\t\t\t{LOCAL.msg_dev_company}\n\t   \t\t\t</div>\n\t   \t\t</div>\n\t   \t]\n\t\t);\n\t}\n\n     clientInputText(e)\n     {\n     \tthis.setState({client_text: e.target.value});\n     }\n\n\tonEnterPress(e)\n\t{\n\n\t\tif (e.keyCode === 13 && e.shiftKey === false) {\n\n\t\t\tthis.submitMessage(e);\n\t\t}\n\n\t}\n\n\tscrollToBottom()\n\t{\n\t\tconst messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\n\t\tmessagesContainer.scrollTop = messagesContainer.scrollHeight;\n\t}\n\n\tmessageSent(id, val)\n\t{\n\t\tif (DEBUG) {\n\t\t\tconsole.log(\"Sent ? \", val);\n\t\t\tconsole.log(id);\n\t\t}\n\t}\n\n\tsubmitMessage(e)\n\t{\n\t\te.preventDefault();\n\t\tif (this.state.client_text.trim()===\"\")\n\t\t{\n\t\t\treturn;\n    \t\t}\n\t\tconst newItem = {\n\t\t\tisClient: true,\n\t\t\tmessage: this.state.client_text.trim(),\n\t\t\tkey: getKey(),\n\t\t\tattachment: false\n\t\t}\n\n\t\tdirectLine.postActivity({\n\t\t\tfrom: { id: userData.USER_ID, name: userData.USER_NAME },\n\t\t\ttype: 'message',\n\t\t\ttext: newItem.message\n\t\t}).subscribe(\n\t\t\tid => this.messageSent(id, true),\n\t\t\terror => this.messageSent(error, false)\n\t\t);\n\n\t\tthis.setState(prevState => ({\n\t\t     client_text: \"\",\n\t\t\titems: prevState.items.concat(newItem),\n\t\t}));\n\t}\n\n\tchatBotActivity(act)\n\t{\n\t\tif (DEBUG)\n\t\t\tconsole.log(act);\n\n\t\tif ((act.from.id===userData.BOT_ID)&&(act.from.name===userData.BOT_NAME))\n\t\t{\n\t\t\tif (act.type===\"message\")\n\t\t\t{\n\n\t\t\t\tconst newItem = {\n\t\t\t\t\tisClient: false,\n\t\t\t\t\tmessage: (act.attachments)?act.attachments[0].content:act.text,\n\t\t\t\t\tattachment:(act.attachments!=null)\n\t\t\t\t}\n\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tbotIsTyping: false,\n\t\t\t\t\titems: prevState.items.concat(newItem)\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse if (act.type===\"typing\")\n\t\t\t{\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tbotIsTyping: true\n\t\t\t\t}));\n\t\t\t}\n\n\t\t}\n\t}\n\n\tcomponentDidUpdate()\n\t{\n\t\tthis.scrollToBottom();\n\t}\n\n\tcomponentDidMount()\n\t{\n\n\t\tdirectLine.activity$\n\t\t\t.subscribe(\n\t\t\t\tactivity => this.chatBotActivity(activity)\n\t\t);\n\t}\n\n}\n\nReactDOM.render(<MyChatbotClass />, document.getElementById('mywebchat'));\n\n","//Ter Mar 13 13:46:06 BRT 2018 \n\nconst PT_BR = 0;\nconst EN_US = 1;\nconst FR_FR = 2;\nconst IT_IT = 3;\nconst ES_ES = 4;\n\nconst chatBotName = \"Chatbot\";\nconst myCompanyName = \"Douglas\";\n\n// TODO: Os idiomas Francês, Espanhol e o Italiano precisam de revisão de um nativo ou uma pessoa que entende o idioma específico\n\nconst MESSAGE_PT_BR = {\n    msg_welcome_title: \"Bem vindo !\",\n    msg_header_name: \"Intellie \" + chatBotName,\n    msg_welcome: \"Olá, sou o \" + chatBotName + \". O primeiro ChatBot libertário treinado para solucionar as suas dúvidas sobre libertarianismo e criptomoedas.\",\n    msg_welcome2: \"Visite o github de meu desenvolvedor para mais detalhes: https://github.com/douglasmatosdev\",\n    msg_welcome3: \"Se gostou desse projeto, aceito doações Bitcoin: 1JDckpLRJGhp46LTcjY1vsW19wurZ3L1d5\",\n    msg_welcome4: \"Nano: nano_1cb5fs7xmixqzpitfn9ouy4j1g3hjmdfudc1igt5xhwwps7qdku5htqxmznb\",\n    msg_welcome5: \"Litecoin: LRjEiKadFzPCoGorWvSVUnWPsFyPZGt97f\",\n    msg_welcome6: \"Dogecoin: DRrWWMdwY6AN8rdz7zH2cp3qaK8vSgDTau\",\n    msg_sent: \"Enviado: \",\n    msg_received_at: \"Recebido às: \",\n    msg_dev_company: \"Desenvolvido por \" + myCompanyName,\n    msg_box_hint: \"Digite sua mensagem aqui...\",\n    local: 'pt',\n    date_format: 'HH:mm DD/MM/YYYY',\n    msg_website: \"https://github.com/douglasmatosdev\",\n    msg_website_hint: \"Clique aqui e visite meu github para saber mais sobre mim ;)\",\n    msg_connecting: \"Conectando ...\",\n    msg_connected: \"Conectado\",\n    msg_not_connected: \"Não conectado\",\n    msg_send_hint: \"Enviar mensagem\"\n}\n\nconst MESSAGE_EN_US = {\n    msg_welcome_title: \"Welcome !\",\n    msg_header_name: \"My \" + chatBotName,\n    msg_welcome: \"Hi, I am \" + chatBotName + \". The first libertarian Bot trained to solve your doubts about libertarianism and cryptocurrencies.\",\n    msg_welcome2: \"To know more about my developer visit: https://github.com/douglasmatosdev\",\n    msg_welcome3: \"If you liked it please, consider a little donation with: 1JDckpLRJGhp46LTcjY1vsW19wurZ3L1d5\",\n    msg_welcome4: \"Nano: nano_1cb5fs7xmixqzpitfn9ouy4j1g3hjmdfudc1igt5xhwwps7qdku5htqxmznb\",\n    msg_welcome5: \"Litecoin: LRjEiKadFzPCoGorWvSVUnWPsFyPZGt97f\",\n    msg_welcome6: \"Dogecoin: DRrWWMdwY6AN8rdz7zH2cp3qaK8vSgDTau\",\n    msg_sent: \"Sent: \",\n    msg_received_at: \"Received at: \",\n    msg_dev_company: \"Developed by \" + myCompanyName,\n    msg_box_hint: \"Your message here...\",\n    local: 'us',\n    date_format: 'HH:mm MM/DD/YYYY',\n    msg_website: \"https://github.com/douglasmatosdev\",\n    msg_website_hint: \"Just click here to visit my github to know more about me ;)\",\n    msg_connecting: \"Connecting ...\",\n    msg_connected: \"Conected\",\n    msg_not_connected: \"Not connected\",\n    msg_send_hint: \"Send message\"\n\n}\n\nconst MESSAGE_FR_FR = {\n    msg_welcome_title: \"Benvenue !\",\n    msg_header_name: \"Mon \" + chatBotName,\n    msg_welcome: \"Salut, je suis \" + chatBotName + \". Le premier bot libertaire formé pour résoudre vos doutes sur le libertarisme et les crypto-monnaies.\",\n    msg_welcome2: \"Pour en savoir plus sur ma développeur, visitez: https://github.com/douglasmatosdev\",\n    msg_welcome3: \"S'il vous plaît faire un don si vous avez aimé avec Bitcoin: 1JDckpLRJGhp46LTcjY1vsW19wurZ3L1d5\",\n    msg_welcome4: \"Nano: nano_1cb5fs7xmixqzpitfn9ouy4j1g3hjmdfudc1igt5xhwwps7qdku5htqxmznb\",\n    msg_welcome5: \"Litecoin: LRjEiKadFzPCoGorWvSVUnWPsFyPZGt97f\",\n    msg_welcome6: \"Dogecoin: DRrWWMdwY6AN8rdz7zH2cp3qaK8vSgDTau\",\n    msg_sent: \"Envoyé: \",\n    msg_received_at: \"Reçu: \",\n    msg_dev_company: \"Développé par \" + myCompanyName,\n    msg_box_hint: \"Tapez votre message ...\",\n    local: 'fr',\n    date_format: 'HH:mm DD/MM/YYYY',\n    msg_website: \"https://github.com/douglasmatosdev\",\n    msg_website_hint: \"Cliquez ici pour visiter mon github pour en savoir plus sur moi ;)\",\n    msg_connecting: \"Connecting ...\",\n    msg_connected: \"Connecté\",\n    msg_not_connected: \"Débranché\",\n    msg_send_hint: \"Envoyer le message\"\n\n}\n\nconst MESSAGE_IT_IT = {\n    msg_welcome_title: \"Benvenutti !\",\n    msg_header_name: \"Mio \" + chatBotName,\n    msg_welcome: \"Ciao. Io sono \" + chatBotName + \". Il primo ChatBot libertario a risolvere i loro dubbi sul libertarismo e sulle cripto-monete.\",\n    msg_welcome2: \"Per saperne di più sul mio sviluppatore, visita: https://github.com/douglasmatosdev\",\n    msg_welcome3: \"Per favore, fai una donazione se ti è piaciuto con Bitcoin: 1JDckpLRJGhp46LTcjY1vsW19wurZ3L1d5\",\n    msg_welcome4: \"Nano: nano_1cb5fs7xmixqzpitfn9ouy4j1g3hjmdfudc1igt5xhwwps7qdku5htqxmznb\",\n    msg_welcome5: \"Litecoin: LRjEiKadFzPCoGorWvSVUnWPsFyPZGt97f\",\n    msg_welcome6: \"Dogecoin: DRrWWMdwY6AN8rdz7zH2cp3qaK8vSgDTau\",\n    msg_sent: \"Inviato: \",\n    msg_received_at: \"Ricevuto a: \",\n    msg_dev_company: \"Sviluppato da \" + myCompanyName,\n    msg_box_hint: \"Il tuo messaggio qui...\",\n    local: 'it',\n    date_format: 'HH:mm DD/MM/YYYY',\n    msg_website: \"https://github.com/douglasmatosdev\",\n    msg_website_hint: \"Fai clic qui per visitare il mio github per saperne di più su di me ;)\",\n    msg_connecting: \"Collegamento ...\",\n    msg_connected: \"Collegato\",\n    msg_not_connected: \"Non collegato\",\n    msg_send_hint: \"Invia messaggio\"\n}\n\nconst MESSAGE_ES_ES = {\n    msg_welcome_title: \"Bienvenido !\",\n    msg_header_name: \"Mi \" + chatBotName,\n    msg_welcome: \"Hola, soy \" + chatBotName + \". El primer bot libertario entrenado para resolver sus dudas sobre el libertarismo y las criptomonedas.\",\n    msg_welcome2: \"Para saber más sobre mi desarrollador, visite: https://github.com/douglasmatosdev\",\n    msg_welcome3: \"Si te gustó, considera una pequeña donación con Bitcoin: 1JDckpLRJGhp46LTcjY1vsW19wurZ3L1d5\",\n    msg_welcome4: \"Nano: nano_1cb5fs7xmixqzpitfn9ouy4j1g3hjmdfudc1igt5xhwwps7qdku5htqxmznb\",\n    msg_welcome5: \"Litecoin: LRjEiKadFzPCoGorWvSVUnWPsFyPZGt97f\",\n    msg_welcome6: \"Dogecoin: DRrWWMdwY6AN8rdz7zH2cp3qaK8vSgDTau\",\n    msg_sent: \"Expedido: \",\n    msg_received_at: \"Recibido en: \",\n    msg_dev_company: \"Desarrollado por \" + myCompanyName,\n    msg_box_hint: \"Su mensaje aquí...\",\n    local: 'es',\n    date_format: 'HH:mm DD/MM/YYYY',\n    msg_website: \"https://github.com/douglasmatosdev\",\n    msg_website_hint: \"Clic aquí para visitar mi github para saber más sobre mí. ;)\",\n    msg_connecting: \"Conectando ...\",\n    msg_connected: \"Conectado\",\n    msg_not_connected: \"No connectado\",\n    msg_send_hint: \"Enviar mensaje\"\n}\n\nmodule.exports = {\n\n    PT_BR,\n    EN_US,\n    FR_FR,\n    IT_IT,\n    ES_ES,\n    chatBotName,\n    load_language: function(lang) {\n        switch (lang) {\n            case PT_BR:\n                return MESSAGE_PT_BR;\n            case FR_FR:\n                return MESSAGE_FR_FR;\n            case IT_IT:\n                return MESSAGE_IT_IT;\n            case ES_ES:\n                return MESSAGE_ES_ES;\n            default:\n                return MESSAGE_EN_US;\n        }\n    }\n}","const USER_NAME = \"nomeDoUsuario\";\nconst USER_ID = \"ID_Do_Usuario\";\nconst BOT_ID = \"id\";\nconst BOT_NAME = \"Bot\";\n\nfunction getStatusChat(status, message) {\n    var element = document.getElementById(\"id-chat-status\");\n\n    element.style.backgroundColor = status;\n    element.title = message;\n}\n\nmodule.exports = {\n\n    USER_NAME,\n    USER_ID,\n    BOT_ID,\n    BOT_NAME,\n    getStatusChat\n\n}","/*\n\tAUTHOR: Fábio Pereira da Silva\n\tYEAR: 2019\n\tLICENSE: MIT\n\tEMAIL: fabioegel@gmail.com or fabioegel@protonmail.com\n\n\tThis is an adaptive-card host configuration for myCryptoBot\n\n\tAll fonts, button and styles of adaptive-cards are customized here\n*/\n\nvar hostConfig=\n{\n\t\"choiceSetInputValueSeparator\": \",\",\n\t\"supportsInteractivity\": true,\n\t\"fontFamily\": \"Roboto\",\n\t\"spacing\": {\n\t\t\"small\": 3,\n\t\t\"default\": 8,\n\t\t\"medium\": 14,\n\t\t\"large\": 20,\n\t\t\"extraLarge\": 40,\n\t\t\"padding\": 10\n\t},\n\t\"separator\": {\n\t\t\"lineThickness\": 1,\n\t\t\"lineColor\": \"#EEEEEE\"\n\t},\n\t\"fontSizes\": {\n\t\t\"small\": 10,\n\t\t\"default\": 12,\n\t\t\"medium\": 14,\n\t\t\"large\": 16,\n\t\t\"extraLarge\": 18\n\t},\n\t\"fontWeights\": {\n\t\t\"lighter\": 200,\n\t\t\"default\": 400,\n\t\t\"bolder\": 600\n\t},\n\t\"imageSizes\": {\n\t\t\"small\": 30,\n\t\t\"medium\": 60,\n\t\t\"large\": 120\n\t},\n\t\"containerStyles\": {\n\t\t\"default\": {\n\t\t\t\"foregroundColors\": {\n\t\t\t\t\"default\": {\n\t\t\t\t\t\"default\": \"#383838\",\n\t\t\t\t\t\"subtle\": \"#383838\"\n\t\t\t\t},\n\t\t\t\t\"dark\": {\n\t\t\t\t\t\"default\": \"#383838\",\n\t\t\t\t\t\"subtle\": \"#383838\"\n\t\t\t\t},\n\t\t\t\t\"light\": {\n\t\t\t\t\t\"default\": \"#FFFFFF\",\n\t\t\t\t\t\"subtle\": \"#33000000\"\n\t\t\t\t},\n\t\t\t\t\"accent\": {\n\t\t\t\t\t\"default\": \"#2E89FC\",\n\t\t\t\t\t\"subtle\": \"#882E89FC\"\n\t\t\t\t},\n\t\t\t\t\"good\": {\n\t\t\t\t\t\"default\": \"#54a254\",\n\t\t\t\t\t\"subtle\": \"#DD54a254\"\n\t\t\t\t},\n\t\t\t\t\"warning\": {\n\t\t\t\t\t\"default\": \"#c3ab23\",\n\t\t\t\t\t\"subtle\": \"#DDc3ab23\"\n\t\t\t\t},\n\t\t\t\t\"attention\": {\n\t\t\t\t\t\"default\": \"#e83030\",\n\t\t\t\t\t\"subtle\": \"#e83030\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"backgroundColor\": \"#34b6ab\"\n\t\t},\n\t\t\"emphasis\": {\n\t\t\t\"foregroundColors\": {\n\t\t\t\t\"default\": {\n\t\t\t\t\t\"default\": \"#333333\",\n\t\t\t\t\t\"subtle\": \"#EE333333\"\n\t\t\t\t},\n\t\t\t\t\"dark\": {\n\t\t\t\t\t\"default\": \"#000000\",\n\t\t\t\t\t\"subtle\": \"#66000000\"\n\t\t\t\t},\n\t\t\t\t\"light\": {\n\t\t\t\t\t\"default\": \"#FFFFFF\",\n\t\t\t\t\t\"subtle\": \"#33000000\"\n\t\t\t\t},\n\t\t\t\t\"accent\": {\n\t\t\t\t\t\"default\": \"#2E89FC\",\n\t\t\t\t\t\"subtle\": \"#882E89FC\"\n\t\t\t\t},\n\t\t\t\t\"good\": {\n\t\t\t\t\t\"default\": \"#54a254\",\n\t\t\t\t\t\"subtle\": \"#DD54a254\"\n\t\t\t\t},\n\t\t\t\t\"warning\": {\n\t\t\t\t\t\"default\": \"#c3ab23\",\n\t\t\t\t\t\"subtle\": \"#DDc3ab23\"\n\t\t\t\t},\n\t\t\t\t\"attention\": {\n\t\t\t\t\t\"default\": \"#e83030\",\n\t\t\t\t\t\"subtle\": \"#e83030\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"backgroundColor\": \"#08000000\"\n\t\t}\n\t},\n\t\"actions\": {\n\t\t\"maxActions\": 5,\n\t\t\"spacing\": \"Default\",\n\t\t\"buttonSpacing\": 5,\n\t\t\"showCard\": {\n\t\t\t\"actionMode\": \"Inline\",\n\t\t\t\"inlineTopMargin\": 16,\n\t\t\t\"style\": \"emphasis\"\n\t\t},\n\t\t\"preExpandSingleShowCardAction\": true, //False\n\t\t\"actionsOrientation\": \"Vertical\",\n\t\t\"actionAlignment\": \"Stretch\"\n\t},\n\t\"adaptiveCard\": {\n\t\t\"allowCustomStyle\": false\n\t},\n\t\"imageSet\": {\n\t\t\"imageSize\": \"Medium\",\n\t\t\"maxImageHeight\": 100\n\t},\n\t\"factSet\": {\n\t\t\"title\": {\n\t\t\t\"size\": \"Default\",\n\t\t\t\"color\": \"Default\",\n\t\t\t\"isSubtle\": false,\n\t\t\t\"weight\": \"Bolder\",\n\t\t\t\"warp\": true\n\t\t},\n\t\t\"value\": {\n\t\t\t\"size\": \"Default\",\n\t\t\t\"color\": \"Default\",\n\t\t\t\"isSubtle\": false,\n\t\t\t\"weight\": \"Default\",\n\t\t\t\"warp\": true\n\t\t},\n\t\t\"spacing\": 10\n\t}\n}\n\nmodule.exports = {\n\thostConfig\n}\n"],"sourceRoot":""}